services:
  frontend:
    container_name: lrar_frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    volumes:
      - ./frontend/config:/frontend/config
      - ./frontend/src:/frontend/src

      - ./frontend/index.html:/frontend/index.html
      - ./frontend/package.json:/frontend/package.json
      - ./frontend/package-lock.json:/frontend/package-lock.json

      - node_modules_volume:/frontend/node_modules
    networks:
      - app-network

  backend:
    container_name: lrar_backend
    build:
      context: .
      dockerfile: backend/Dockerfile
    ports:
      - "3001:3001"
    environment:
      DATABASE_URL: ${DATABASE_URL}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./backend/migrations:/lrar/backend/migrations
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  db:
    image: postgres:13
    container_name: lrar_database
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "5432:${POSTGRES_PORT}"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      retries: 5

volumes:
  db-data:
  node_modules_volume:

networks:
  app-network:
